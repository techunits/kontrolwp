<?php

/**********************
* Post cloning for KontrolWP
* @author Sougata Pal
* @author_uri https://www.linkedin.com/in/skallpaul
* @since 2.0.6
***********************/

class KWPCustomPostTypeWidgetController {
    public function actionRegisterWidget() {
        add_action('widgets_init', array(&$this, 'registerCustomPostTypeWidgetInstance'));
    }

    public function registerCustomPostTypeWidgetInstance() {
        register_widget('KWPCustomPostTypeWidget');
    }
}

/**
 * Adds KWPCustomPostTypeWidget widget.
 */
class KWPCustomPostTypeWidget extends WP_Widget {

    /**
     * Register widget with WordPress.
     */
    function __construct() {
        parent::__construct(
            'kwp-recent-custom-posts',
            esc_html__( 'Recent Custom Post Type Entries', 'text_domain' ),
            array(
                'description' => esc_html__( 'Your siteâ€™s most recent entries for any Custom Post Type - Generated by KontrolWP.', 'text_domain' )
            )
        );
    }

    /**
     * Front-end display of widget.
     *
     * @see WP_Widget::widget()
     *
     * @param array $args     Widget arguments.
     * @param array $instance Saved values from database.
     */
    public function widget( $args, $instance ) {
        echo $args['before_widget'];
        if ( ! empty( $instance['title'] ) ) {
            echo $args['before_title'] . apply_filters( 'widget_title', $instance['title'] ) . $args['after_title'];
        }
        echo esc_html__('Hello, World!', 'text_domain' );
        echo $args['after_widget'];
    }

    /**
     * Back-end widget form.
     *
     * @see WP_Widget::form()
     *
     * @param array $instance Previously saved values from database.
     */
    public function form( $instance ) {
        $type = ! empty( $instance['post_type'] ) ? $instance['post_type'] : 'post';
        $title = ! empty( $instance['title'] ) ? $instance['title'] : esc_html__('', 'text_domain');
        $number = ! empty( $instance['number'] ) ? $instance['number'] : 5;

        $optionhtml = '';
        foreach(get_post_types(array(
            'public'    => true,
            '_builtin'  =>  false
        ), 'objects') as $type) {
            $optionhtml .= '<option value="'.$type->name.'">'.ucwords($type->name).'</option>';
        }

        $form = '<p>
                    <label for="widget-'.esc_attr($this->get_field_id('post_type')).'">'.esc_attr_e('Post Type:', 'text_domain').'</label>
                    <select class="widefat" id="'.esc_attr( $this->get_field_id('post_type')).'" name="'.esc_attr($this->get_field_name('post_type')).'">
                        '.$optionhtml.'
                    </select>
                </p>
                <p>
                    <label for="widget-'.esc_attr($this->get_field_id('title')).'">'.esc_attr_e('Title:', 'text_domain').'</label>
                    <input class="widefat" id="'.esc_attr( $this->get_field_id( 'title' ) ).'" name="'.esc_attr( $this->get_field_name('title')).'" type="text" value="'.esc_attr($title).'" placeholder="Recent Entries" />
                </p>
                <p>
                    <label for="widget-'.esc_attr($this->get_field_id('number')).'">Number of posts to show:</label>
                    <input class="tiny-text" id="widget-'.esc_attr($this->get_field_id('number')).'" name="'.esc_attr( $this->get_field_name('number')).'" type="number" step="1" min="1" value="'.esc_attr($number).'" size="3" />
                </p>';
        echo $form;
    }

    /**
     * Sanitize widget form values as they are saved.
     *
     * @see WP_Widget::update()
     *
     * @param array $new_instance Values just sent to be saved.
     * @param array $old_instance Previously saved values from database.
     *
     * @return array Updated safe values to be saved.
     */
    public function update( $new_instance, $old_instance ) {
        $instance = array();
        $instance['post_type'] = ( ! empty( $new_instance['post_type'] ) ) ? strip_tags( $new_instance['post_type'] ) : 'post';
        $instance['title'] = ( ! empty( $new_instance['title'] ) ) ? strip_tags( $new_instance['title'] ) : '';
        $instance['number'] = ( ! empty( $new_instance['number'] ) ) ? $new_instance['number'] : 5;

        return $instance;
    }

}

?>